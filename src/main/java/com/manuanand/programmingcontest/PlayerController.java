package com.manuanand.programmingcontest;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/player") // This means URL's start with /player (after Application path)
public class PlayerController {
	@Autowired // This means to get the bean called playerRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private PlayerRepository playerRepository;

	///
	// Player Repository
	///
	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody Player addPlayer (
			@RequestParam String name, @RequestParam String email, @RequestParam int rating) {

		Player newPlayer = new Player();
		newPlayer.setName(name);
		newPlayer.setEmail(email);
		newPlayer.setRating(rating);
		
		playerRepository.save(newPlayer);
		
		return newPlayer;
	}

	@GetMapping(path="/")
	public @ResponseBody Iterable<Player> getAllPlayers() {
		
		// This returns a JSON or XML with the players
		return playerRepository.findAll();
	}

	@GetMapping(path="/{id}")
	public @ResponseBody Player getSpecificPlayer(@PathVariable String id) {
		
		Integer playerId = null;
		try {
			playerId = Integer.parseInt(id);
		} catch (NumberFormatException ex) {
			return null;
		}

		Optional<Player> player = playerRepository.findById(playerId);
		if (!player.isEmpty()) {
			return player.get();
		} 

		return null;
	}
}