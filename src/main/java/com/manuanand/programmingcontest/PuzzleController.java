package com.manuanand.programmingcontest;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.server.ResponseStatusException;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/puzzle") // This means URL's start with /puzzle (after Application path)
public class PuzzleController {
	@Autowired // This means to get the bean called puzzleRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private PuzzleRepository puzzleRepository;
	
	///
	// Puzzle Repository
	///
	@PostMapping(path="/create") // Map ONLY POST Requests
	public @ResponseBody Puzzle addPuzzle (
			@RequestParam String uri, @RequestParam int rating) {
		
		Puzzle newPuzzle = new Puzzle();
		newPuzzle.setUri(uri);
		newPuzzle.setRating(rating);
		
		puzzleRepository.save(newPuzzle);
		
		return newPuzzle;
	}
	
	@GetMapping(path="/")
	public @ResponseBody Iterable<Puzzle> getAllPuzzles() {
		
		// This returns a JSON or XML with the users
		return puzzleRepository.findAll();
	}

	@GetMapping(path="/{id}")
	public @ResponseBody Puzzle getSpecificPuzzle(@PathVariable String id) {
		
		Integer puzzleId = null;
		try {
			puzzleId = Integer.parseInt(id);
		} catch (NumberFormatException ex) {
			return null;
		}

		Optional<Puzzle> puzzle = puzzleRepository.findById(puzzleId);
		if (!puzzle.isEmpty()) {
			return puzzle.get();
		} 

		return null;
	}

	@GetMapping(path="/deleteAll")
	public @ResponseBody void deleteAllPuzzles() {
		
		// This returns a JSON or XML with the users
		puzzleRepository.deleteAll();
	}
}